{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\n\nconst Pokedex = require(\"pokedex-promise-v2\");\n\nconst P = new Pokedex();\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    P.resource(url).then(response => {\n      setData(response);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/hooks/useFetch.js"],"names":["React","useState","useEffect","Pokedex","require","P","useFetch","url","data","setData","isPending","setIsPending","error","setError","resource","then","response","catch","err","message"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AACA,MAAMC,CAAC,GAAG,IAAIF,OAAJ,EAAV;;AAEA,MAAMG,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,CAAC,CAACS,QAAF,CAAWP,GAAX,EACGQ,IADH,CACSC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACO,QAAD,CAAP;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KALH,EAMGI,KANH,CAMUC,GAAD,IAAS;AACdP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACK,GAAG,CAACC,OAAL,CAAR;AACD,KATH;AAUD,GAXQ,EAWN,CAACZ,GAAD,CAXM,CAAT;AAaA,SAAO;AACLC,IAAAA,IADK;AAELE,IAAAA,SAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAvBD;;GAAMN,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { React, useState, useEffect } from \"react\";\nconst Pokedex = require(\"pokedex-promise-v2\");\nconst P = new Pokedex();\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    P.resource(url)\n      .then((response) => {\n        setData(response);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch((err) => {\n        setIsPending(false);\n        setError(err.message);\n      });\n  }, [url]);\n\n  return {\n    data,\n    isPending,\n    error,\n  };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}