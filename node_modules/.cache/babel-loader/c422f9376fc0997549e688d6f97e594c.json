{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst dexSlice = createSlice({\n  name: \"dex\",\n  initialState,\n  reducers: {\n    pokeAdded(state, action) {\n      state.push(action.payload);\n    },\n\n    pokeReleased(state, action) {\n      state.splice(action.payload, 1);\n    },\n\n    pokeFavorite(state, action) {\n      const {\n        poke,\n        index\n      } = action.payload;\n      const pokeRef = state.find(p => p.name === poke.name);\n\n      if (pokeRef) {\n        pokeRef.favorite = !pokeRef.favorite;\n      }\n    }\n\n  }\n});\nexport const {\n  pokeAdded,\n  pokeReleased,\n  pokeFavorite\n} = dexSlice.actions;\nexport default dexSlice.reducer;","map":{"version":3,"sources":["/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/store/dexSlice.js"],"names":["createSlice","nanoid","initialState","dexSlice","name","reducers","pokeAdded","state","action","push","payload","pokeReleased","splice","pokeFavorite","poke","index","pokeRef","find","p","favorite","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,QAAQ,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAE,KADqB;AAE3BF,EAAAA,YAF2B;AAG3BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,KAHO;;AAIRC,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACK,MAAN,CAAaJ,MAAM,CAACE,OAApB,EAA6B,CAA7B;AACD,KANO;;AAORG,IAAAA,YAAY,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBP,MAAM,CAACE,OAA/B;AACA,YAAMM,OAAO,GAAGT,KAAK,CAACU,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACd,IAAF,KAAWU,IAAI,CAACV,IAAlC,CAAhB;;AAEA,UAAIY,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACG,QAAR,GAAmB,CAACH,OAAO,CAACG,QAA5B;AACD;AACF;;AAdO;AAHiB,CAAD,CAA5B;AAqBA,OAAO,MAAM;AAAEb,EAAAA,SAAF;AAAaK,EAAAA,YAAb;AAA2BE,EAAAA;AAA3B,IAA4CV,QAAQ,CAACiB,OAA3D;AAEP,eAAejB,QAAQ,CAACkB,OAAxB","sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst dexSlice = createSlice({\n  name: \"dex\",\n  initialState,\n  reducers: {\n    pokeAdded(state, action) {\n      state.push(action.payload);\n    },\n    pokeReleased(state, action) {\n      state.splice(action.payload, 1);\n    },\n    pokeFavorite(state, action) {\n      const { poke, index } = action.payload;\n      const pokeRef = state.find((p) => p.name === poke.name);\n\n      if (pokeRef) {\n        pokeRef.favorite = !pokeRef.favorite;\n      }\n    },\n  },\n});\n\nexport const { pokeAdded, pokeReleased, pokeFavorite } = dexSlice.actions;\n\nexport default dexSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}