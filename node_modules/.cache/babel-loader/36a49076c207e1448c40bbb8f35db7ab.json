{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport Grid from \"./layout/Grid\";\nimport PokeThumb from \"./components/PokeThumb\";\nimport SearchBar from \"./components/SearchBar\";\nimport useFetch from \"./hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchUrl = \"/api/v2/pokemon/\";\n\nfunction App() {\n  _s();\n\n  let urlArray = [];\n  let pokeArray = [];\n\n  for (let i = pokeIndex; i <= pokemonsNumber; i++) {\n    let str = fetchUrl + i;\n    urlArray.push(str);\n  }\n\n  const {\n    data: pokemons,\n    isPending,\n    error\n  } = useFetch(urlArray);\n  const [pokeIndex, setPokeIndex] = useState(1);\n  const [pokemonsNumber, setPokemonsNumber] = useState(20);\n  const [loadMore, setLoadMore] = useState(0);\n\n  const handleClick = () => {\n    setPokeIndex(pokemonsNumber + 1);\n    setPokemonsNumber(pokemonsNumber + 20);\n    setLoadMore(loadMore + 1);\n  };\n\n  const searchPokemon = search => {\n    if (search === \"\") {\n      fetchPokemons();\n    } else {\n      P.getPokemonByName(search).then(response => {\n        console.log(response);\n        let tmpArray = [];\n        tmpArray.push(response);\n        setPokemons(tmpArray);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const fetchPokemons = () => {\n    P.resource(urlArray).then(function (response) {\n      if (loadMore === 0) {\n        setPokemons(response);\n      } else {\n        let pokeArray = pokemons;\n        let tmpArr = pokeArray.concat(response);\n        setPokemons(tmpArr);\n      }\n\n      urlArray = [];\n      setisPending(false);\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      callback: searchPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), pokemons && /*#__PURE__*/_jsxDEV(Grid, {\n      children: pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(PokeThumb, {\n        clickable: true,\n        image: pokemon.sprites.other[\"official-artwork\"].front_default,\n        poke: pokemon\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"LOAD MORE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"gSm53Wj6FbpbHTPGBecKuSQm39s=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/App.js"],"names":["React","useState","useEffect","Grid","PokeThumb","SearchBar","useFetch","fetchUrl","App","urlArray","pokeArray","i","pokeIndex","pokemonsNumber","str","push","data","pokemons","isPending","error","setPokeIndex","setPokemonsNumber","loadMore","setLoadMore","handleClick","searchPokemon","search","fetchPokemons","P","getPokemonByName","then","response","console","log","tmpArray","setPokemons","catch","err","resource","tmpArr","concat","setisPending","map","pokemon","sprites","other","front_default","id"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport Grid from \"./layout/Grid\";\nimport PokeThumb from \"./components/PokeThumb\";\nimport SearchBar from \"./components/SearchBar\";\nimport useFetch from \"./hooks/useFetch\";\n\nconst fetchUrl = \"/api/v2/pokemon/\";\n\nfunction App() {\n  let urlArray = [];\n  let pokeArray = [];\n  for (let i = pokeIndex; i <= pokemonsNumber; i++) {\n    let str = fetchUrl + i;\n    urlArray.push(str);\n  }\n\n  const { data: pokemons, isPending, error } = useFetch(urlArray);\n  const [pokeIndex, setPokeIndex] = useState(1);\n  const [pokemonsNumber, setPokemonsNumber] = useState(20);\n  const [loadMore, setLoadMore] = useState(0);\n\n  const handleClick = () => {\n    setPokeIndex(pokemonsNumber + 1);\n    setPokemonsNumber(pokemonsNumber + 20);\n    setLoadMore(loadMore + 1);\n  };\n\n  const searchPokemon = (search) => {\n    if (search === \"\") {\n      fetchPokemons();\n    } else {\n      P.getPokemonByName(search)\n        .then((response) => {\n          console.log(response);\n          let tmpArray = [];\n          tmpArray.push(response);\n          setPokemons(tmpArray);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const fetchPokemons = () => {\n    P.resource(urlArray).then(function (response) {\n      if (loadMore === 0) {\n        setPokemons(response);\n      } else {\n        let pokeArray = pokemons;\n        let tmpArr = pokeArray.concat(response);\n        setPokemons(tmpArr);\n      }\n\n      urlArray = [];\n      setisPending(false);\n      console.log(response);\n    });\n  };\n\n  return (\n    <>\n      {isPending && <div></div>}\n      <SearchBar callback={searchPokemon} />\n      {pokemons && (\n        <Grid>\n          {pokemons.map((pokemon) => (\n            <PokeThumb\n              key={pokemon.id}\n              clickable\n              image={pokemon.sprites.other[\"official-artwork\"].front_default}\n              poke={pokemon}\n            />\n          ))}\n        </Grid>\n      )}\n\n      <button onClick={handleClick}>LOAD MORE</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}