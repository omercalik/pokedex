{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/components/PokeDetailCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { StyledPokeDetailCard } from \"../styles/StyledPokeDetailCard\";\nimport PokeType from \"../components/PokeType\";\nimport { Link } from \"react-router-dom\";\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { pokeAdded } from \"../store/dexSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokeDetailCard = ({\n  pokemon,\n  info,\n  character\n}) => {\n  _s();\n\n  var Pokedex = require(\"pokedex-promise-v2\");\n\n  var P = new Pokedex();\n  const [evolutionArray, setEvolutionArray] = useState([]);\n  const [flavorText, setFlavorText] = useState(\"\");\n  const dispatch = useDispatch();\n  const style = {\n    display: \"inline-block\"\n  };\n  const redstate = useSelector(state => state.dex);\n\n  const handleClick = () => {\n    const id = pokemon.id;\n    const pokeName = pokemon.name;\n    const pokeImage = pokemon.sprites.other[\"official-artwork\"].front_default;\n    const favorite = false;\n\n    if (pokemon && !redstate.some(e => e.id === pokemon.id)) {\n      dispatch(pokeAdded({\n        id,\n        pokeName,\n        pokeImage,\n        favorite\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (info) {\n      let str = info.flavor_text_entries[0].flavor_text.replace(\"\f\", \" \");\n      setFlavorText(str);\n      P.resource(info.evolution_chain.url).then(response => {\n        if (response.chain.evolves_to.length === 0) {\n          console.log(response);\n          setEvolutionArray([]);\n        } else if (response.chain.evolves_to[0].evolves_to.length === 0) {\n          P.resource([response.chain.species.url, response.chain.evolves_to[0].species.url]).then(res => {\n            let tmpArray = [];\n            res.forEach(poke => {\n              tmpArray.push(poke);\n            });\n            setEvolutionArray(tmpArray);\n          }).catch(err => console.log(err));\n        } else if (response.chain.evolves_to[0].evolves_to.length !== 0) {\n          P.resource([response.chain.species.url, response.chain.evolves_to[0].species.url, response.chain.evolves_to[0].evolves_to[0].species.url]).then(res => {\n            let tmpArray = [];\n            res.forEach(poke => {\n              tmpArray.push(poke);\n            });\n            setEvolutionArray(tmpArray);\n          }).catch(err => console.log(err));\n        }\n      }).catch(err => console.log(err));\n    } else {\n      return null;\n    }\n  }, [info]);\n  if (!pokemon && !info) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StyledPokeDetailCard, {\n    children: [console.log(evolutionArray), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: pokemon.name.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokemon.sprites.other[\"official-artwork\"].front_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Add to dex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"14px\",\n            fontStyle: \"italic\"\n          },\n          children: flavorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"35%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              clear: \"both\"\n            },\n            children: \"Evolution Chain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"30%\",\n              textAlign: \"center\",\n              display: \"flex\",\n              marginTop: \"10px\"\n            },\n            children: evolutionArray.length !== 0 ? evolutionArray.map((poke, i) => /*#__PURE__*/_jsxDEV(Link, {\n              to: `/pokemons/${poke.id}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"#877455\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: [console.log(evolutionArray), evolutionArray.length === i + 1 ? poke.name : poke.name + \" >\"]\n              }, nanoid(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: \"This pokemon does not evolve.\"\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arrow-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: pokemon.id === 1 ? `/pokemons/898` : `/pokemons/${pokemon.id - 1}`,\n              children: /*#__PURE__*/_jsxDEV(FiChevronLeft, {\n                style: {\n                  fontSize: \"70px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: pokemon.id === 898 ? `/pokemons/1` : `/pokemons/${pokemon.id + 1}`,\n              children: /*#__PURE__*/_jsxDEV(FiChevronRight, {\n                style: {\n                  fontSize: \"70px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second-col\",\n        children: [character ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Characteristic: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Characteristic: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Unknown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Height: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pokemon.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Weight: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pokemon.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), pokemon.stats.map((ele, i) => /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [ele.stat.name + \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ele.base_stat\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)), pokemon.abilities.length > 1 ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Abilities:\", pokemon.abilities.map((ele, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pokemon.abilities.length === i + 1 ? ele.ability.name : ele.ability.name + \", \"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Ability: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pokemon.abilities[0].ability.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 24\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style,\n          children: pokemon.types.map(type => /*#__PURE__*/_jsxDEV(PokeType, {\n            type: type.type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokeDetailCard, \"WTMVE8r9hitYnC6bm7iPIeRkMi8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PokeDetailCard;\nexport default PokeDetailCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeDetailCard\");","map":{"version":3,"sources":["/mnt/c/Users/viggn/OneDrive/Desktop/pokedex/src/components/PokeDetailCard.js"],"names":["React","useState","useEffect","StyledPokeDetailCard","PokeType","Link","FiChevronLeft","FiChevronRight","useDispatch","useSelector","nanoid","pokeAdded","PokeDetailCard","pokemon","info","character","Pokedex","require","P","evolutionArray","setEvolutionArray","flavorText","setFlavorText","dispatch","style","display","redstate","state","dex","handleClick","id","pokeName","name","pokeImage","sprites","other","front_default","favorite","some","e","str","flavor_text_entries","flavor_text","replace","resource","evolution_chain","url","then","response","chain","evolves_to","length","console","log","species","res","tmpArray","forEach","poke","push","catch","err","toUpperCase","fontSize","fontStyle","marginTop","clear","marginLeft","textAlign","map","i","textDecoration","color","height","weight","stats","ele","stat","base_stat","abilities","ability","types","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyledPokeDetailCard } from \"../styles/StyledPokeDetailCard\";\nimport PokeType from \"../components/PokeType\";\nimport { Link } from \"react-router-dom\";\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nimport { pokeAdded } from \"../store/dexSlice\";\n\nconst PokeDetailCard = ({ pokemon, info, character }) => {\n  var Pokedex = require(\"pokedex-promise-v2\");\n  var P = new Pokedex();\n  const [evolutionArray, setEvolutionArray] = useState([]);\n  const [flavorText, setFlavorText] = useState(\"\");\n  const dispatch = useDispatch();\n  const style = {\n    display: \"inline-block\",\n  };\n  const redstate = useSelector((state) => state.dex);\n\n  const handleClick = () => {\n    const id = pokemon.id;\n    const pokeName = pokemon.name;\n    const pokeImage = pokemon.sprites.other[\"official-artwork\"].front_default;\n    const favorite = false;\n\n    if (pokemon && !redstate.some((e) => e.id === pokemon.id)) {\n      dispatch(pokeAdded({ id, pokeName, pokeImage, favorite }));\n    }\n  };\n\n  useEffect(() => {\n    if (info) {\n      let str = info.flavor_text_entries[0].flavor_text.replace(\"\f\", \" \");\n      setFlavorText(str);\n      P.resource(info.evolution_chain.url)\n        .then((response) => {\n          if (response.chain.evolves_to.length === 0) {\n            console.log(response);\n            setEvolutionArray([]);\n          } else if (response.chain.evolves_to[0].evolves_to.length === 0) {\n            P.resource([\n              response.chain.species.url,\n              response.chain.evolves_to[0].species.url,\n            ])\n              .then((res) => {\n                let tmpArray = [];\n                res.forEach((poke) => {\n                  tmpArray.push(poke);\n                });\n                setEvolutionArray(tmpArray);\n              })\n              .catch((err) => console.log(err));\n          } else if (response.chain.evolves_to[0].evolves_to.length !== 0) {\n            P.resource([\n              response.chain.species.url,\n              response.chain.evolves_to[0].species.url,\n              response.chain.evolves_to[0].evolves_to[0].species.url,\n            ])\n              .then((res) => {\n                let tmpArray = [];\n                res.forEach((poke) => {\n                  tmpArray.push(poke);\n                });\n                setEvolutionArray(tmpArray);\n              })\n              .catch((err) => console.log(err));\n          }\n        })\n\n        .catch((err) => console.log(err));\n    } else {\n      return null;\n    }\n  }, [info]);\n\n  if (!pokemon && !info) return <div></div>;\n\n  return (\n    <StyledPokeDetailCard>\n      {console.log(evolutionArray)}\n      <h2>{pokemon.name.toUpperCase()}</h2>\n      <div className=\"info\">\n        <div className=\"first-col\">\n          <div>\n            <img\n              src={pokemon.sprites.other[\"official-artwork\"].front_default}\n              alt=\"\"\n            />\n          </div>\n\n          <button onClick={handleClick}>Add to dex</button>\n\n          <p style={{ fontSize: \"14px\", fontStyle: \"italic\" }}>{flavorText}</p>\n\n          <div style={{ marginTop: \"35%\" }}>\n            <h3 style={{ clear: \"both\" }}>Evolution Chain</h3>\n\n            <div\n              style={{\n                marginLeft: \"30%\",\n                textAlign: \"center\",\n                display: \"flex\",\n                marginTop: \"10px\",\n              }}\n            >\n              {evolutionArray.length !== 0 ? (\n                evolutionArray.map((poke, i) => (\n                  <Link\n                    to={`/pokemons/${poke.id}`}\n                    style={{ textDecoration: \"none\", color: \"#877455\" }}\n                    key={nanoid()}\n                  >\n                    <p style={{ marginLeft: \"10px\" }} key={nanoid()}>\n                      {console.log(evolutionArray)}\n                      {evolutionArray.length === i + 1\n                        ? poke.name\n                        : poke.name + \" >\"}\n                    </p>\n                  </Link>\n                ))\n              ) : (\n                <p style={{ marginLeft: \"10px\" }} key={nanoid()}>\n                  This pokemon does not evolve.\n                </p>\n              )}\n            </div>\n\n            <div className=\"arrow-container\">\n              <Link\n                to={\n                  pokemon.id === 1\n                    ? `/pokemons/898`\n                    : `/pokemons/${pokemon.id - 1}`\n                }\n              >\n                <FiChevronLeft style={{ fontSize: \"70px\" }} />\n              </Link>\n              <Link\n                to={\n                  pokemon.id === 898\n                    ? `/pokemons/1`\n                    : `/pokemons/${pokemon.id + 1}`\n                }\n              >\n                <FiChevronRight style={{ fontSize: \"70px\" }} />\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"second-col\">\n          {character ? (\n            <h5>\n              Characteristic: <span>{character}</span>\n            </h5>\n          ) : (\n            <h5>\n              Characteristic: <span>Unknown</span>\n            </h5>\n          )}\n          <h5>\n            Height: <span>{pokemon.height}</span>\n          </h5>\n          <h5>\n            Weight: <span>{pokemon.weight}</span>\n          </h5>\n          {pokemon.stats.map((ele, i) => (\n            <h5 key={i}>\n              {ele.stat.name + \": \"}\n              <span key={i}>{ele.base_stat}</span>\n            </h5>\n          ))}\n          {pokemon.abilities.length > 1 ? (\n            <h5>\n              Abilities:\n              {pokemon.abilities.map((ele, i) => (\n                <span key={i}>\n                  {pokemon.abilities.length === i + 1\n                    ? ele.ability.name\n                    : ele.ability.name + \", \"}\n                </span>\n              ))}\n            </h5>\n          ) : (\n            <h5>\n              Ability: <span>{pokemon.abilities[0].ability.name}</span>{\" \"}\n            </h5>\n          )}\n          <h4>Type</h4>\n          <div style={style}>\n            {pokemon.types.map((type) => (\n              <PokeType type={type.type.name} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </StyledPokeDetailCard>\n  );\n};\n\nexport default PokeDetailCard;\n"]},"metadata":{},"sourceType":"module"}